<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đặt Lại Mật Khẩu - WebGIS Climate Smart City</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #007bff;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --info-color: #17a2b8;
        }
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .main-container {
            min-height: 100vh;
            padding: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .main-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.18);
            padding: 30px;
            width: 100%;
            max-width: 500px;
            animation: fadeIn 0.5s ease-in-out;
        }
        .btn-primary {
            background: linear-gradient(45deg, var(--primary-color), #0056b3);
            border: none;
            border-radius: 25px;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 123, 255, 0.4);
        }
        .btn-outline-primary {
            border-radius: 25px;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-outline-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 123, 255, 0.4);
        }
        .alert {
            border-radius: 10px;
            border: none;
            padding: 15px 20px;
            animation: fadeIn 0.5s ease-in-out;
        }
        .form-control {
            border-radius: 10px;
            border: 1px solid #ced4da;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.3);
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @media (max-width: 768px) {
            .main-content {
                padding: 15px;
                margin: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid main-container">
        <!-- Main Content -->
        <div class="main-content">
            <h2 class="mb-4 text-center"><i class="fas fa-lock me-2"></i>Đặt Lại Mật Khẩu</h2>
            <p class="text-muted mb-4 text-center">Nhập mật khẩu mới để đặt lại tài khoản của bạn.</p>
            <!-- Alerts -->
            <% if (error) { %>
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i><%= error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
                </div>
            <% } %>
            <% if (success) { %>
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i><%= success %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
                </div>
            <% } %>
            <!-- Form -->
            <form method="POST" action="/reset-password" class="needs-validation" novalidate>
                <input type="hidden" name="token" value="<%= token || '' %>">
                <div class="mb-3">
                    <label for="password" class="form-label">Mật khẩu mới</label>
                    <input type="password" class="form-control" id="password" name="password" placeholder="Nhập mật khẩu mới" required minlength="6">
                    <div class="invalid-feedback">
                        Mật khẩu phải có ít nhất 6 ký tự.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="confirm-password" class="form-label">Xác nhận mật khẩu</label>
                    <input type="password" class="form-control" id="confirm-password" name="confirm-password" placeholder="Xác nhận mật khẩu" required>
                    <div class="invalid-feedback">
                        Vui lòng xác nhận mật khẩu.
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Đặt Lại Mật Khẩu</button>
                    <a href="/login" class="btn btn-outline-primary">Quay lại đăng nhập</a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Client-side form validation
        (function () {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    const password = form.querySelector('#password').value;
                    const confirmPassword = form.querySelector('#confirm-password').value;
                    if (!form.checkValidity() || password !== confirmPassword) {
                        event.preventDefault();
                        event.stopPropagation();
                        if (password !== confirmPassword) {
                            form.querySelector('#confirm-password').setCustomValidity('Mật khẩu xác nhận không khớp');
                        } else {
                            form.querySelector('#confirm-password').setCustomValidity('');
                        }
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
</body>
</html>